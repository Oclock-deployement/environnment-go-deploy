name: try docker push image  # Nom du workflow

on:
  workflow_dispatch:                                        # Permet l'exécution manuelle via l'interface GitHub
  push:
    tags:
      - 'v*'                                                # Déclenche le workflow lors de la poussée d'un tag qui commence par "v"
env:
  REGISTRY: docker.io                                       # Le registre Docker (Docker Hub ici)
  IMAGE_NAME: ${{ vars.DOCKERHUB_USERNAME }}/vachette       # Le nom de l'image (avec l'utilisateur DockerHub)
    
jobs:
  build:
    runs-on: ubuntu-24.04                                   # Utilisation de la dernière version Ubuntu comme environnement d'exécution
    
    steps:
       # Étape pour vérifier/cloner le code source du dépôt GitHub
      - uses: actions/checkout@v4

      # Récupère les métadonnées du Docker
      - name: Docker meta                                   
        id: meta                                            # Identifiant de l'étape pour réutilisation dans les étapes suivantes
        uses: docker/metadata-action@v5                     # Action utilisée pour gérer les métadonnées de l'image Docker
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          
      - name: Login to Docker Hub  # Connexion à Docker Hub
        uses: docker/login-action@v3  
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}  
          password: ${{ secrets.DOCKERHUB_VACHETTE_TOKEN }} 
    
      # Construction et poussée de l'image Docker
      - name: Build and push  
        uses: docker/build-push-action@v6 
        with:
          context: .                                            # Le répertoire de travail (répertoire racine du projet GitHub)
          push: true                                            # Indique qu'il faut pousser l'image construite vers Docker Hub
          tags: ${{ steps.meta.outputs.tags }}                  # Utilisation des tags récupérés par l'étape précédente (metadonnées)
          labels: ${{ steps.meta.outputs.labels }}              # Utilisation des labels récupérés par l'étape précédente (metadonnées)
