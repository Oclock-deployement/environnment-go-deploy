name: Build and Push Docker Image

on:
  schedule:
    - cron: '*/2 * * * *'  # Exécute chaque 2 minutes pour les tests (à ajuster selon vos besoins)
  workflow_dispatch:  # Permet de déclencher manuellement le workflow
  push:
    tags:
      - 'v*'  # Déclenche lors du push d'un tag commençant par v

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ vars.DOCKERHUB_USERNAME }}/vachette  # Nom de l'image Docker

jobs:
  cron_job:
    runs-on: ubuntu-latest
    outputs:
      latest_tag: ${{ steps.check_tag.outputs.latest_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if there is a matching tag
        id: check_tag
        run: |
          # Vérifier s'il existe des tags dans le dépôt
          TAGS=$(git tag)
          if [ -z "$TAGS" ]; then
            echo "No tags found."
            echo "::set-output name=latest_tag::"
            exit 0  # Sortir si aucun tag n'est trouvé
          fi

          # Si des tags existent, récupérer le dernier tag
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          if [[ $LATEST_TAG == v* ]]; then
            echo "Latest tag found: $LATEST_TAG"
            echo "::set-output name=latest_tag::$LATEST_TAG"
          else
            echo "No matching tag found."
            echo "::set-output name=latest_tag::"
            exit 0  # Sortir si le tag ne correspond pas à 'v*'

  build:
    needs: cron_job
    if: needs.cron_job.outputs.latest_tag != ''  # Condition : le tag doit exister
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_VACHETTE_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .  # Le répertoire de travail complet
          push: true  # Pousser l'image construite vers Docker Hub
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

