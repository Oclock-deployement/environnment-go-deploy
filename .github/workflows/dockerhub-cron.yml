---

name: Build on Tag

on:
  schedule:
    # - cron: '0 0 * * *' # Déclenche chaque nuit à minuit
    - cron: '*/2 * * * *' # toute les 2 minutes pour test
  workflow_dispatch: # Permet de déclencher manuellement le workflow

jobs:
  cron_job:
    runs-on: ubuntu-latest
    outputs:
      latest_tag: ${{ steps.check_tag.outputs.latest_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if there is a matching tag
        id: check_tag
        run: |
         # Si des tags existent, récupérer le dernier tag
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          if [[ $LATEST_TAG == v* ]]; then
            echo "Latest tag found: $LATEST_TAG"
            echo "::set-output name=latest_tag::$LATEST_TAG"
          else
            echo "No matching tag found."
            echo "::set-output name=latest_tag::"
            exit 0  # Sortir si le tag ne correspond pas à 'v*'

  build:
    needs: cron_job
    # Condition : le tag doit exister
    if: needs.cron_job.outputs.latest_tag != '' 
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_VACHETTE_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
